.container {
  border: 5px solid #ffcc5c;
  display: flex;
  flex-direction: row;
  /* justify-content: space-evenly; */

  justify-content: flex-end;
  align-items: flex-end;
}

.container > div {
  /*  flex: 1; /* space and sizes flex items equally, and they shrink and grow with the page. short for flex-grow (how much of extra space should be distributed to flex items - different numbers indicate how much faster 1 element will grow than another),
  flex-shrink (same as flex grow, but for shrinking) and flex-basis (default width)
  /* width:33.33% will do the same, but if you wanted to add a new item to the container, you would need to update this number */
  text-align: center;
  align-items: stretch;
}

.search {
  flex: 1 1 200px;
}

.home {
  /* flex: 1; sets seach to be twice as big as other divs */
  background-color: aqua;
  /*align-self: flex-end; */
  flex: 1 1 200px;
  order: 1;
}

.logout {
  /*flex: 1; */
  background-color: blueviolet;
  flex: 11 1 200px;
  order: -1;
}

/* justify-x will always justify content in the direction of the main flex container. This is horizontal (row) by default, but can be set to vertical using flex-direction: column
align-items will always align items in the cross axis i.e. if the flex direction is set to row, then align items will align things vertically, and vice versa. */
